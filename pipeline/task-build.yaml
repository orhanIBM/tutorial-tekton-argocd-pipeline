apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: build
spec:
  inputs:
    params:
      - name: BUILDER_IMAGE
        description: The location of the buildah builder image.
        default: quay.io/buildah/stable:v1.11.0
      - name: DOCKERFILE
        description: Path to the Dockerfile to build.
        default: ./Dockerfile
      - name: CONTEXT
        description: Path to the directory to use as context.
        default: .
      - name: TLSVERIFY
        description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
        default: "false"
    resources:
      - name: source
        type: git
      - name: image
        type: image
  steps:
    - name: build
      image: $(inputs.params.BUILDER_IMAGE)
      workingDir: /workspace/source
      command: ["/bin/bash"]
      args:
        - -c
        - |
          set -e
          SHORT_GIT_HASH="$(cat .git/FETCH_HEAD | awk '{print substr($1,0,7)}')"
          NEW_IMAGE_ID="$(inputs.resources.image.url):$SHORT_GIT_HASH"
          NEW_IMAGE_ID="$(echo $NEW_IMAGE_ID | sed s/\$NAMESPACE/$NAMESPACE/)"
          echo "SHORT_GIT_HASH = $SHORT_GIT_HASH"
          echo "Building Image $NEW_IMAGE_ID"
          buildah bud --tls-verify="$(inputs.params.TLSVERIFY)" --layers -f "$(inputs.params.DOCKERFILE)" -t "$NEW_IMAGE_ID" "$(inputs.params.CONTEXT)"
          echo "Pushing Image $NEW_IMAGE_ID"
          buildah push --tls-verify="$(inputs.params.TLSVERIFY)" "$NEW_IMAGE_ID" "docker://$NEW_IMAGE_ID"
          echo "NEW_IMAGE_ID=$NEW_IMAGE_ID" >> /workspace/env-config
      securityContext:
        privileged: true
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
      env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
  volumes:
    - name: varlibcontainers
      emptyDir: {}
    - name: m2-repository
      emptyDir: {}
